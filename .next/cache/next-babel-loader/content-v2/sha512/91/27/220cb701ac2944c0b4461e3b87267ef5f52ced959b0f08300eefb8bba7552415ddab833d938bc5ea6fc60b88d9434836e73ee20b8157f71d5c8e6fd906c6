{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/connor/Development/code/udemy/react/nextjs/onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this) // <MeetupDetail\n  //     image='https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg'\n  //     title='A Third Meetup'\n  //     address='Some Street 3, Some City'\n  //     description='This is a third meetup description'\n  // />\n  ;\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://connorkormos97:UEuUL3qk14xLxvza@meetups.79ky1ce.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })) // paths: [\n    //     { params: {\n    //         meetupId: 'm1'\n    //     } },\n    //     { params: {\n    //         meetupId: 'm2'\n    //     } }\n    // ]\n\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for single meetup\n  const meetupId = context.params.meetupId;\n  const meetupObjectId = new ObjectId(meetupId);\n  const client = await MongoClient.connect('mongodb+srv://connorkormos97:UEuUL3qk14xLxvza@meetups.79ky1ce.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupObjectId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      } // meetupData: {\n      //     id: meetupId,\n      //     image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n      //     title: 'A Third Meetup',\n      //     address: 'Some Street 3, Some City',\n      //     description: 'This is a third meetup description'\n      // }\n\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/home/connor/Development/code/udemy/react/nextjs/onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","meetupObjectId","selectedMeetup","findOne","id"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD5B;AAEI,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF5B;AAGI,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH9B;AAII,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJlC;AAAA;AAAA;AAAA;AAAA,UADJ,CAOI;AACA;AACA;AACA;AACA;AACA;AAZJ;AAcH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AAEnC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,wGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAC1BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADkB,KAAL,CAAlB,CAFJ,CAKH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZG,GAAP;AAcH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAE1C;AAGA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMI,cAAc,GAAG,IAAI7B,QAAJ,CAAayB,QAAb,CAAvB;AAEA,QAAMf,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,wGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMgB,cAAc,GAAG,MAAMjB,iBAAiB,CAACkB,OAAlB,CAA0B;AAAEd,IAAAA,GAAG,EAAEY;AAAP,GAA1B,CAA7B;AAEAnB,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHhB,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACR4B,QAAAA,EAAE,EAAEF,cAAc,CAACb,GAAf,CAAmBS,QAAnB,EADI;AAERpB,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAFd;AAGRC,QAAAA,OAAO,EAAEuB,cAAc,CAACvB,OAHhB;AAIRF,QAAAA,KAAK,EAAEyB,cAAc,CAACzB,KAJd;AAKRG,QAAAA,WAAW,EAAEsB,cAAc,CAACtB;AALpB,OADT,CAQH;AACA;AACA;AACA;AACA;AACA;AACA;;AAdG;AADJ,GAAP;AAkBH;AAED,eAAeN,aAAf","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb';\n\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) { \n    return (\n        <MeetupDetail \n            image={props.meetupData.image}\n            title={props.meetupData.title}\n            address={props.meetupData.address}\n            description={props.meetupData.description}\n        />\n        // <MeetupDetail\n        //     image='https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg'\n        //     title='A Third Meetup'\n        //     address='Some Street 3, Some City'\n        //     description='This is a third meetup description'\n        // />\n    )\n}\n\nexport async function getStaticPaths() {\n    \n    const client = await MongoClient.connect('mongodb+srv://connorkormos97:UEuUL3qk14xLxvza@meetups.79ky1ce.mongodb.net/?retryWrites=true&w=majority');\n    const db = client.db();\n    \n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\n\n    client.close();\n\n    return {\n        fallback: false,\n        paths: meetups.map(meetup => ({\n            params: { meetupId: meetup._id.toString() }\n        }))\n        // paths: [\n        //     { params: {\n        //         meetupId: 'm1'\n        //     } },\n        //     { params: {\n        //         meetupId: 'm2'\n        //     } }\n        // ]\n    }\n}\n\nexport async function getStaticProps(context) {\n\n    // fetch data for single meetup\n\n    \n    const meetupId = context.params.meetupId;\n    \n    const meetupObjectId = new ObjectId(meetupId)\n\n    const client = await MongoClient.connect('mongodb+srv://connorkormos97:UEuUL3qk14xLxvza@meetups.79ky1ce.mongodb.net/?retryWrites=true&w=majority');\n    const db = client.db();\n    \n    const meetupsCollection = db.collection('meetups');\n\n    const selectedMeetup = await meetupsCollection.findOne({ _id: meetupObjectId });\n\n    client.close();\n\n    return {\n        props: {\n            meetupData: {\n                id: selectedMeetup._id.toString(),\n                title: selectedMeetup.title,\n                address: selectedMeetup.address,\n                image: selectedMeetup.image,\n                description: selectedMeetup.description\n            },\n            // meetupData: {\n            //     id: meetupId,\n            //     image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n            //     title: 'A Third Meetup',\n            //     address: 'Some Street 3, Some City',\n            //     description: 'This is a third meetup description'\n            // }\n        }\n    }\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}